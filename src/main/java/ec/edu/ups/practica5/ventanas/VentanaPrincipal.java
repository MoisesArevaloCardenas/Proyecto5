/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ec.edu.ups.practica5.ventanas;

import ec.edu.ups.practica5.controlador.ControladorCantante;
import ec.edu.ups.practica5.controlador.ControladorCompositor;
import ec.edu.ups.practica5.dao.CantanteDAO;
import ec.edu.ups.practica5.dao.CompositorDAO;
import ec.edu.ups.practica5.idao.ICantanteDAO;
import ec.edu.ups.practica5.idao.ICompositorDAO;
import ec.edu.ups.practica5.ventanas.cantante.VentanaActualizarCantante;
import ec.edu.ups.practica5.ventanas.cantante.VentanaAgregarCantante;
import ec.edu.ups.practica5.ventanas.cantante.VentanaBuscarCantante;
import ec.edu.ups.practica5.ventanas.cantante.VentanaEliminarCantante;
import ec.edu.ups.practica5.ventanas.cantante.VentanaListarCantantes;
import ec.edu.ups.practica5.ventanas.compositor.VentanaActualizarCompositor;
import ec.edu.ups.practica5.ventanas.compositor.VentanaAgregarCompositor;
import ec.edu.ups.practica5.ventanas.compositor.VentanaBuscarCompositor;
import ec.edu.ups.practica5.ventanas.compositor.VentanaEliminarCompositor;
import ec.edu.ups.practica5.ventanas.compositor.VentanaListarCompositor;
import java.util.Locale;
import java.util.ResourceBundle;

/**
 *
 * @author Administrator
 */
public class VentanaPrincipal extends javax.swing.JFrame {

    /**
     * Creates new form VentanaPrincipal
     */
    //Ventanas compositor
    private VentanaAgregarCompositor ventanaAgregarCompositor;
    private VentanaActualizarCompositor ventanaActualizarCompositor;
    private VentanaBuscarCompositor ventanaBuscarCompositor;
    private VentanaEliminarCompositor ventanaEliminarCompositor;
    private VentanaListarCompositor ventanaListarCompositor;

    //Ventanas cantante
    private VentanaAgregarCantante ventanaAgregarCantante;
    private VentanaBuscarCantante ventanaBuscarCantante;
    private VentanaActualizarCantante ventanaActualizarCantante;
    private VentanaEliminarCantante ventanaEliminarCantante;
    private VentanaListarCantantes ventanaListarCantantes;

    //Controladores
    private ControladorCompositor controladorCompositor;
    private ControladorCantante controladorCantante;

    //DAOs
    private ICantanteDAO cantanteDAO;
    private ICompositorDAO compositorDAO;

    //Internacionalizacion
    private Locale localizacion;
    private ResourceBundle mensajes;

    public VentanaPrincipal() {
        initComponents();
        this.setLocationRelativeTo(null);
        cantanteDAO = new CantanteDAO();
        controladorCantante = new ControladorCantante();
        compositorDAO = new CompositorDAO();
        controladorCompositor = new ControladorCompositor();

        localizacion = Locale.getDefault();
        mensajes = ResourceBundle.getBundle("mensajes.mensaje", localizacion);
        cambiarIdioma();
    }

    private void cambiarIdioma() {
        mensajes = ResourceBundle.getBundle("mensajes.mensaje", localizacion);
        menuCompositor.setText(mensajes.getString("menu.compositor"));
        menuCantante.setText(mensajes.getString("menu.cantante"));
        menuIdiomas.setText(mensajes.getString("menu.opciones"));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        desktopPane = new javax.swing.JDesktopPane();
        menuBar = new javax.swing.JMenuBar();
        menuCompositor = new javax.swing.JMenu();
        menuCrearCompositor = new javax.swing.JMenuItem();
        menuBuscarCompositor = new javax.swing.JMenuItem();
        menuActualizarCompositor = new javax.swing.JMenuItem();
        menuEliminarCompositor = new javax.swing.JMenuItem();
        menuListarCompositores = new javax.swing.JMenuItem();
        menuCantante = new javax.swing.JMenu();
        menuCrearCantante = new javax.swing.JMenuItem();
        menuBuscarCantante = new javax.swing.JMenuItem();
        menuActualizarCantante = new javax.swing.JMenuItem();
        menuEliminarCantante = new javax.swing.JMenuItem();
        menuListarCantantes = new javax.swing.JMenuItem();
        menuIdiomas = new javax.swing.JMenu();
        menuItemEspañol = new javax.swing.JMenuItem();
        menuItemIngles = new javax.swing.JMenuItem();
        menuItemFrances = new javax.swing.JMenuItem();
        menuOpciones1 = new javax.swing.JMenu();
        menuItemSalirOpciones1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        menuCompositor.setMnemonic('f');
        menuCompositor.setText("Compositor");

        menuCrearCompositor.setMnemonic('o');
        menuCrearCompositor.setText("Crear");
        menuCrearCompositor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuCrearCompositorActionPerformed(evt);
            }
        });
        menuCompositor.add(menuCrearCompositor);

        menuBuscarCompositor.setMnemonic('a');
        menuBuscarCompositor.setText("Buscar");
        menuBuscarCompositor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuBuscarCompositorActionPerformed(evt);
            }
        });
        menuCompositor.add(menuBuscarCompositor);

        menuActualizarCompositor.setMnemonic('s');
        menuActualizarCompositor.setText("Actualizar");
        menuActualizarCompositor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuActualizarCompositorActionPerformed(evt);
            }
        });
        menuCompositor.add(menuActualizarCompositor);

        menuEliminarCompositor.setMnemonic('x');
        menuEliminarCompositor.setText("Eliminar");
        menuEliminarCompositor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuEliminarCompositorActionPerformed(evt);
            }
        });
        menuCompositor.add(menuEliminarCompositor);

        menuListarCompositores.setText("Listar");
        menuListarCompositores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuListarCompositoresActionPerformed(evt);
            }
        });
        menuCompositor.add(menuListarCompositores);

        menuBar.add(menuCompositor);

        menuCantante.setMnemonic('e');
        menuCantante.setText("Cantante");

        menuCrearCantante.setMnemonic('t');
        menuCrearCantante.setText("Crear");
        menuCrearCantante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuCrearCantanteActionPerformed(evt);
            }
        });
        menuCantante.add(menuCrearCantante);

        menuBuscarCantante.setMnemonic('p');
        menuBuscarCantante.setText("Buscar");
        menuBuscarCantante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuBuscarCantanteActionPerformed(evt);
            }
        });
        menuCantante.add(menuBuscarCantante);

        menuActualizarCantante.setMnemonic('y');
        menuActualizarCantante.setText("Actualizar");
        menuActualizarCantante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuActualizarCantanteActionPerformed(evt);
            }
        });
        menuCantante.add(menuActualizarCantante);

        menuEliminarCantante.setMnemonic('d');
        menuEliminarCantante.setText("Eliminar");
        menuEliminarCantante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuEliminarCantanteActionPerformed(evt);
            }
        });
        menuCantante.add(menuEliminarCantante);

        menuListarCantantes.setText("Listar");
        menuListarCantantes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuListarCantantesActionPerformed(evt);
            }
        });
        menuCantante.add(menuListarCantantes);

        menuBar.add(menuCantante);

        menuIdiomas.setText("Idiomas");

        menuItemEspañol.setText("Español");
        menuItemEspañol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemEspañolActionPerformed(evt);
            }
        });
        menuIdiomas.add(menuItemEspañol);

        menuItemIngles.setText("English");
        menuItemIngles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemInglesActionPerformed(evt);
            }
        });
        menuIdiomas.add(menuItemIngles);

        menuItemFrances.setText("Français");
        menuItemFrances.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemFrancesActionPerformed(evt);
            }
        });
        menuIdiomas.add(menuItemFrances);

        menuBar.add(menuIdiomas);

        menuOpciones1.setText("Opciones");

        menuItemSalirOpciones1.setText("Salir");
        menuItemSalirOpciones1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemSalirOpciones1ActionPerformed(evt);
            }
        });
        menuOpciones1.add(menuItemSalirOpciones1);

        menuBar.add(menuOpciones1);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(desktopPane, javax.swing.GroupLayout.DEFAULT_SIZE, 1200, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktopPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 801, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menuCrearCompositorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuCrearCompositorActionPerformed

        if (ventanaAgregarCompositor == null) {
            ventanaAgregarCompositor = new VentanaAgregarCompositor(controladorCompositor);
            desktopPane.add(ventanaAgregarCompositor);
        }

        ventanaAgregarCompositor.setVisible(true);
    }//GEN-LAST:event_menuCrearCompositorActionPerformed

    private void menuBuscarCompositorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuBuscarCompositorActionPerformed

        if (ventanaBuscarCompositor == null) {
            ventanaBuscarCompositor = new VentanaBuscarCompositor(controladorCompositor);
            desktopPane.add(ventanaBuscarCompositor);
        }

        ventanaBuscarCompositor.setVisible(true);
    }//GEN-LAST:event_menuBuscarCompositorActionPerformed

    private void menuActualizarCompositorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuActualizarCompositorActionPerformed
        if (ventanaActualizarCompositor == null) {
            ventanaActualizarCompositor = new VentanaActualizarCompositor(controladorCompositor);
            desktopPane.add(ventanaActualizarCompositor);
        }

        ventanaActualizarCompositor.setVisible(true);
    }//GEN-LAST:event_menuActualizarCompositorActionPerformed

    private void menuEliminarCompositorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuEliminarCompositorActionPerformed
        if (ventanaEliminarCompositor == null) {
            ventanaEliminarCompositor = new VentanaEliminarCompositor(controladorCompositor);
            desktopPane.add(ventanaEliminarCompositor);
        }

        ventanaEliminarCompositor.setVisible(true);
    }//GEN-LAST:event_menuEliminarCompositorActionPerformed

    private void menuListarCompositoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuListarCompositoresActionPerformed

        if (ventanaListarCompositor == null) {
            ventanaListarCompositor = new VentanaListarCompositor(controladorCompositor);
            desktopPane.add(ventanaListarCompositor);
        }

        ventanaListarCompositor.setVisible(true);
    }//GEN-LAST:event_menuListarCompositoresActionPerformed

    private void menuCrearCantanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuCrearCantanteActionPerformed

        if (ventanaAgregarCantante == null) {
            ventanaAgregarCantante = new VentanaAgregarCantante(controladorCantante);
            desktopPane.add(ventanaAgregarCantante);
        }

        ventanaAgregarCantante.setVisible(true);
    }//GEN-LAST:event_menuCrearCantanteActionPerformed

    private void menuBuscarCantanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuBuscarCantanteActionPerformed
        if (ventanaBuscarCantante == null) {
            ventanaBuscarCantante = new VentanaBuscarCantante(controladorCantante);
            desktopPane.add(ventanaBuscarCantante);
        }

        ventanaBuscarCantante.setVisible(true);
    }//GEN-LAST:event_menuBuscarCantanteActionPerformed

    private void menuActualizarCantanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuActualizarCantanteActionPerformed
        if (ventanaActualizarCantante == null) {
            ventanaActualizarCantante = new VentanaActualizarCantante(controladorCantante);
            desktopPane.add(ventanaActualizarCantante);
        }

        ventanaActualizarCantante.setVisible(true);
    }//GEN-LAST:event_menuActualizarCantanteActionPerformed

    private void menuEliminarCantanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuEliminarCantanteActionPerformed
        if (ventanaEliminarCantante == null) {
            ventanaEliminarCantante = new VentanaEliminarCantante(controladorCantante);
            desktopPane.add(ventanaEliminarCantante);
        }

        ventanaEliminarCantante.setVisible(true);
    }//GEN-LAST:event_menuEliminarCantanteActionPerformed

    private void menuListarCantantesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuListarCantantesActionPerformed
        if (ventanaListarCantantes == null) {
            ventanaListarCantantes = new VentanaListarCantantes(controladorCantante);
            desktopPane.add(ventanaListarCantantes);
        }

        ventanaListarCantantes.setVisible(true);
    }//GEN-LAST:event_menuListarCantantesActionPerformed

    private void menuItemEspañolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemEspañolActionPerformed
        localizacion = new Locale("es", "EC");
        cambiarIdioma();


    }//GEN-LAST:event_menuItemEspañolActionPerformed

    private void menuItemSalirOpciones1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemSalirOpciones1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_menuItemSalirOpciones1ActionPerformed

    private void menuItemInglesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemInglesActionPerformed
        // TODO add your handling code here:
        localizacion = new Locale("en", "US");
        cambiarIdioma();

    }//GEN-LAST:event_menuItemInglesActionPerformed

    private void menuItemFrancesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemFrancesActionPerformed
        // TODO add your handling code here:
        localizacion = new Locale("fr", "FR");
        cambiarIdioma();
    }//GEN-LAST:event_menuItemFrancesActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDesktopPane desktopPane;
    private javax.swing.JMenuItem menuActualizarCantante;
    private javax.swing.JMenuItem menuActualizarCompositor;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem menuBuscarCantante;
    private javax.swing.JMenuItem menuBuscarCompositor;
    private javax.swing.JMenu menuCantante;
    private javax.swing.JMenu menuCompositor;
    private javax.swing.JMenuItem menuCrearCantante;
    private javax.swing.JMenuItem menuCrearCompositor;
    private javax.swing.JMenuItem menuEliminarCantante;
    private javax.swing.JMenuItem menuEliminarCompositor;
    private javax.swing.JMenu menuIdiomas;
    private javax.swing.JMenuItem menuItemEspañol;
    private javax.swing.JMenuItem menuItemFrances;
    private javax.swing.JMenuItem menuItemIngles;
    private javax.swing.JMenuItem menuItemSalirOpciones1;
    private javax.swing.JMenuItem menuListarCantantes;
    private javax.swing.JMenuItem menuListarCompositores;
    private javax.swing.JMenu menuOpciones1;
    // End of variables declaration//GEN-END:variables
}
